Thoughts
----------------------------------
* 写程序不单单是和机器沟通，更是和未来要看这段程序的人沟通的。试想要给另一个人讲解代码
   ，首先你自己会在代码的每个层次上广度优先讲解，其次针对对方的提问，这提问却总是在一
  个层次上的（如果对方提了两个层次，你也会给对方分成两个层次讲），所以这一个层次的相关
  代码以某种方式集中在一个地方是有好处的，就像我们真实世界所谓有条理的布局一样。   －－
  － 和函数式编程的固定输入输出一样（即变量不可以被重复赋值），把语境严格的划分在人类思
  维完全可以理解的范围内也是可行的。

* 人类思维是否都是完全等价的。即只要有足够的耐心和时间讲解，对方一定会明白，然后 TA 也
  可以这样讲解给第三者。类似计算机的 CPU 和 IO ，以及信息传递。

* 在代码文件布局上保持在每个层次上都有一个 self 。Java 里的目录命名空间也是一种方式。


QA
----------------------------------
Q: 文学编程的优劣?
A: TODO

Q: 选择 CoffeeScript 作为试验 Human程序语言 的原因?
A: 1. 用空格缩进来表达程序语义，并且比同样采用空格的 Python 更简约和有表达力(比如多行
   lambda)。2. 作者 @jashkenas 支持文学编程。3. 非语法上强制，最终都可以变异到诸如
   JavaScript等语言。

A: 目前作者我对于实现编程语言还有足够理论和经验基础，不改变编程语言行为，而只约束编程规
   范，这样对于作者我或者用户来说，成本是相对最小的。而且基于 #Human程序语言的理念# ，
   程序语言的范式和语法和库等，都只是作为思维对象而存在的。

Q: Human程序语言 的理念。
A: Human程序语言最大的特点和优势就是在于革新了人们关于编程语言的观点。不再以穿插在各个
   层次的并导致混乱不可维护的代码为思考点，而是以人类的思维作为出发点， 人类只善于在一
   个上下文里自由地思维最多六七个对象。对于把程序实现作为目标的程序员来说，需要同时兼
   顾好程序各个层次，以及业务各个层次，调整和理清每个部分是至关重要的。

Q: 思维的本质。
A: 在我看来，思维和自我应该是等价的，首先想到的原因是自我必须或只能通过思维来确定自我
   存在。详细论证得从哲学和脑科学等多方面来研究。 TODO

Q: Human程序语言 到底是编程语言 还是软件工程法则?
A: 首先是一个软件工程法则，但是会让编程语言更有利于表达这一法则。所以可以现在其他编程
   语言上尽可能实现，在有足够经验或不好实现时，会逐渐构建起来自己的编程语言。

Q: 什么是最佳代码(和具体何种编程语言无关)?
   最佳代码就是意味着尽可能好的工程实现。对于对方提出的任何切实问题，都可以在视觉上很
   容易(几秒到几十秒不等, 等价于一般人类等待网页打开的时间)。也即是代码尽可能在各个层
   次解释。

Plan
----------------------------------
* 用 CoffeeScript 来实现第一版 语法和语义验证器。 具体原因见 #选择 CoffeeScript 作为试验
  Human程序语言 的原因?# [20141026]

Reference
----------------------------------
* http://www.ac.net.blog.163.com/blog/static/13649056201210173259510/ 这是因为平坦化和
  模块化破坏了函数的局部性，让读者难以理解。我们通常谈及CPU局部性，是指CPU访问相邻内存
  时要比访问远处内存时更快，因为相邻的内存有更大的可能性位于高速缓存中。人脑和CPU一样
  ，工作记忆很小，思考时如果思路不连贯效率就低下。

